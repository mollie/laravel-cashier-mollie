<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    const METADATA_FIELD_TABLES = [
        'orders',
        'order_items',
        'refunds',
        'refund_items',
        'subscriptions',
        'payments',
        'applied_coupons',
        'redeemed_coupons',
        'credits',
    ];

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up(): void
    {
        $this->addMetadataFieldToTables(self::METADATA_FIELD_TABLES);
        $this->createEventLogTable();
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down(): void
    {
        $this->dropMetadataFieldFromTables(self::METADATA_FIELD_TABLES);
        $this->dropEventLogTable();
    }

    protected function addMetadataFieldToTables(array $tables): void
    {
        collect($tables)->each(fn($table) => Schema::table($table, function (Blueprint $table) {
            $table->text('metadata')->nullable();
        }));
    }

    protected function createEventLogTable(): void
    {
        Schema::create('event_log', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->string('event');
            $table->string('cashier_version');
            $table->string('orderable_type')->nullable();
            $table->unsignedBigInteger('orderable_id')->nullable();
            $table->string('billable_type')->nullable();
            $table->unsignedBigInteger('billable_id')->nullable();
            $table->text('context')->nullable();
            $table->timestamps();
        });
    }

    protected function dropMetadataFieldFromTables(array $tables): void
    {
        collect($tables)->each(fn($table) => Schema::table($table, function (Blueprint $table) {
            $table->dropColumn('metadata');
        }));
    }

    protected function dropEventLogTable(): void
    {
        Schema::dropIfExists('event_log');
    }
};
